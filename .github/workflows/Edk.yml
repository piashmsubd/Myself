name: Build Kernel for Nubia SM8350

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Kernel Source
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: piashmsubd/android_kernel_nubia_sm8350
        ref: lineage-20
        fetch-depth: 0

    - name: Setup Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y bc bison build-essential flex libssl-dev make gcc clang libncurses-dev git-core gnupg ccache

    - name: Setup GCC Cross-Compiler
      run: |
        mkdir -p toolchain
        cd toolchain
        wget https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/+archive/android-12.0.0_r1.tar.gz -O toolchain.tar.gz
        mkdir -p gcc64
        tar xf toolchain.tar.gz -C gcc64
        cd ..
        echo "PATH=$GITHUB_WORKSPACE/toolchain/gcc64/bin:$PATH" >> $GITHUB_ENV
        echo "CROSS_COMPILE=aarch64-linux-android-" >> $GITHUB_ENV
        echo "ARCH=arm64" >> $GITHUB_ENV
        echo "SUBARCH=arm64" >> $GITHUB_ENV

    - name: Configure Kernel
      run: |
        make O=out ARCH=arm64 CC=clang CROSS_COMPILE=aarch64-linux-android- nubia_defconfig

    - name: Build Kernel
      run: |
        make O=out ARCH=arm64 CC=clang CROSS_COMPILE=aarch64-linux-android- -j$(nproc)

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Kernel-Build
        path: |
          out/arch/arm64/boot/Image*
          out/arch/arm64/boot/dts/**/*.dtb
